

================================================================
== Vitis HLS Report for 'substitute'
================================================================
* Date:           Wed Nov 23 13:24:35 2022

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        demo
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.181 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        1|        1|  10.000 ns|  10.000 ns|    2|    2|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.58>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%spectopmodule_ln3 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_5" [../../../Code/demo/substitute.c:3]   --->   Operation 3 'spectopmodule' 'spectopmodule_ln3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %input_r"   --->   Operation 4 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %input_r, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_2, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 5 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %input_r, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 6 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %output_r"   --->   Operation 7 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %output_r, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_4, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %output_r, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (1.00ns)   --->   "%input_r_read = read i8 @_ssdm_op_Read.s_axilite.i8, i8 %input_r" [../../../Code/demo/substitute.c:3]   --->   Operation 11 'read' 'input_r_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 12 [1/1] (0.87ns)   --->   "%add_ln15 = add i8 %input_r_read, i8 191" [../../../Code/demo/substitute.c:15]   --->   Operation 12 'add' 'add_ln15' <Predicate = true> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.70ns)   --->   "%icmp_ln15 = icmp_ult  i8 %add_ln15, i8 58" [../../../Code/demo/substitute.c:15]   --->   Operation 13 'icmp' 'icmp_ln15' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%key_i_load = load i32 %key_i" [../../../Code/demo/substitute.c:17]   --->   Operation 14 'load' 'key_i_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln15 = br i1 %icmp_ln15, void %if.else, void %if.then" [../../../Code/demo/substitute.c:15]   --->   Operation 15 'br' 'br_ln15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.00ns)   --->   "%write_ln30 = write void @_ssdm_op_Write.s_axilite.i8P0A, i8 %output_r, i8 %input_r_read" [../../../Code/demo/substitute.c:30]   --->   Operation 16 'write' 'write_ln30' <Predicate = (!icmp_ln15)> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 17 [1/1] (0.46ns)   --->   "%br_ln0 = br void %if.end21_ifconv"   --->   Operation 17 'br' 'br_ln0' <Predicate = (!icmp_ln15)> <Delay = 0.46>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln17 = zext i32 %key_i_load" [../../../Code/demo/substitute.c:17]   --->   Operation 18 'zext' 'zext_ln17' <Predicate = (icmp_ln15)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%substitute_key_addr = getelementptr i8 %substitute_key, i64 0, i64 %zext_ln17" [../../../Code/demo/substitute.c:17]   --->   Operation 19 'getelementptr' 'substitute_key_addr' <Predicate = (icmp_ln15)> <Delay = 0.00>
ST_1 : Operation 20 [2/2] (0.73ns)   --->   "%substitute_key_load = load i5 %substitute_key_addr" [../../../Code/demo/substitute.c:17]   --->   Operation 20 'load' 'substitute_key_load' <Predicate = (icmp_ln15)> <Delay = 0.73> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 18> <ROM>
ST_1 : Operation 21 [1/1] (1.14ns)   --->   "%add_ln23 = add i32 %key_i_load, i32 1" [../../../Code/demo/substitute.c:23]   --->   Operation 21 'add' 'add_ln23' <Predicate = (icmp_ln15)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln24 = zext i32 %add_ln23" [../../../Code/demo/substitute.c:24]   --->   Operation 22 'zext' 'zext_ln24' <Predicate = (icmp_ln15)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%substitute_key_addr_1 = getelementptr i8 %substitute_key, i64 0, i64 %zext_ln24" [../../../Code/demo/substitute.c:24]   --->   Operation 23 'getelementptr' 'substitute_key_addr_1' <Predicate = (icmp_ln15)> <Delay = 0.00>
ST_1 : Operation 24 [2/2] (0.73ns)   --->   "%substitute_key_load_1 = load i5 %substitute_key_addr_1" [../../../Code/demo/substitute.c:24]   --->   Operation 24 'load' 'substitute_key_load_1' <Predicate = (icmp_ln15)> <Delay = 0.73> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 18> <ROM>

State 2 <SV = 1> <Delay = 4.18>
ST_2 : Operation 25 [1/2] (0.73ns)   --->   "%substitute_key_load = load i5 %substitute_key_addr" [../../../Code/demo/substitute.c:17]   --->   Operation 25 'load' 'substitute_key_load' <Predicate = (icmp_ln15)> <Delay = 0.73> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 18> <ROM>
ST_2 : Operation 26 [1/1] (0.87ns)   --->   "%diff = sub i8 %substitute_key_load, i8 %input_r_read" [../../../Code/demo/substitute.c:17]   --->   Operation 26 'sub' 'diff' <Predicate = (icmp_ln15)> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.70ns)   --->   "%icmp_ln21 = icmp_slt  i8 %diff, i8 1" [../../../Code/demo/substitute.c:21]   --->   Operation 27 'icmp' 'icmp_ln21' <Predicate = (icmp_ln15)> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node add_ln21)   --->   "%select_ln21 = select i1 %icmp_ln21, i8 122, i8 96" [../../../Code/demo/substitute.c:21]   --->   Operation 28 'select' 'select_ln21' <Predicate = (icmp_ln15)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.87ns) (out node of the LUT)   --->   "%add_ln21 = add i8 %select_ln21, i8 %diff" [../../../Code/demo/substitute.c:21]   --->   Operation 29 'add' 'add_ln21' <Predicate = (icmp_ln15)> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (1.00ns)   --->   "%write_ln21 = write void @_ssdm_op_Write.s_axilite.i8P0A, i8 %output_r, i8 %add_ln21" [../../../Code/demo/substitute.c:21]   --->   Operation 30 'write' 'write_ln21' <Predicate = (icmp_ln15)> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 31 [1/2] (0.73ns)   --->   "%substitute_key_load_1 = load i5 %substitute_key_addr_1" [../../../Code/demo/substitute.c:24]   --->   Operation 31 'load' 'substitute_key_load_1' <Predicate = (icmp_ln15)> <Delay = 0.73> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 18> <ROM>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%trunc_ln24 = trunc i8 %substitute_key_load_1" [../../../Code/demo/substitute.c:24]   --->   Operation 32 'trunc' 'trunc_ln24' <Predicate = (icmp_ln15)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.71ns)   --->   "%icmp_ln24 = icmp_eq  i7 %trunc_ln24, i7 0" [../../../Code/demo/substitute.c:24]   --->   Operation 33 'icmp' 'icmp_ln24' <Predicate = (icmp_ln15)> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.28ns)   --->   "%select_ln24 = select i1 %icmp_ln24, i32 0, i32 %add_ln23" [../../../Code/demo/substitute.c:24]   --->   Operation 34 'select' 'select_ln24' <Predicate = (icmp_ln15)> <Delay = 0.28> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.46ns)   --->   "%br_ln28 = br void %if.end21_ifconv" [../../../Code/demo/substitute.c:28]   --->   Operation 35 'br' 'br_ln28' <Predicate = (icmp_ln15)> <Delay = 0.46>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%key_i_flag_0 = phi i1 1, void %if.then, i1 0, void %if.else"   --->   Operation 36 'phi' 'key_i_flag_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node select_ln32)   --->   "%key_i_new_0 = phi i32 %select_ln24, void %if.then, i32 0, void %if.else" [../../../Code/demo/substitute.c:24]   --->   Operation 37 'phi' 'key_i_new_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.70ns)   --->   "%icmp_ln32 = icmp_eq  i8 %input_r_read, i8 13" [../../../Code/demo/substitute.c:32]   --->   Operation 38 'icmp' 'icmp_ln32' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.70ns)   --->   "%icmp_ln32_1 = icmp_eq  i8 %input_r_read, i8 10" [../../../Code/demo/substitute.c:32]   --->   Operation 39 'icmp' 'icmp_ln32_1' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node select_ln32)   --->   "%or_ln32 = or i1 %icmp_ln32, i1 %icmp_ln32_1" [../../../Code/demo/substitute.c:32]   --->   Operation 40 'or' 'or_ln32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.28ns) (out node of the LUT)   --->   "%select_ln32 = select i1 %or_ln32, i32 0, i32 %key_i_new_0" [../../../Code/demo/substitute.c:32]   --->   Operation 41 'select' 'select_ln32' <Predicate = true> <Delay = 0.28> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %key_i_flag_0, void %switch.early.test, void %mergeST"   --->   Operation 42 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.70ns)   --->   "%icmp_ln3 = icmp_eq  i8 %input_r_read, i8 13" [../../../Code/demo/substitute.c:3]   --->   Operation 43 'icmp' 'icmp_ln3' <Predicate = (!key_i_flag_0)> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.70ns)   --->   "%icmp_ln3_1 = icmp_eq  i8 %input_r_read, i8 10" [../../../Code/demo/substitute.c:3]   --->   Operation 44 'icmp' 'icmp_ln3_1' <Predicate = (!key_i_flag_0)> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.14ns)   --->   "%or_ln3 = or i1 %icmp_ln3_1, i1 %icmp_ln3" [../../../Code/demo/substitute.c:3]   --->   Operation 45 'or' 'or_ln3' <Predicate = (!key_i_flag_0)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln3 = br i1 %or_ln3, void %if.end29.new, void %mergeST" [../../../Code/demo/substitute.c:3]   --->   Operation 46 'br' 'br_ln3' <Predicate = (!key_i_flag_0)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %select_ln32, i32 %key_i" [../../../Code/demo/substitute.c:34]   --->   Operation 47 'store' 'store_ln34' <Predicate = (or_ln3) | (key_i_flag_0)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end29.new"   --->   Operation 48 'br' 'br_ln0' <Predicate = (or_ln3) | (key_i_flag_0)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%ret_ln36 = ret" [../../../Code/demo/substitute.c:36]   --->   Operation 49 'ret' 'ret_ln36' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.58ns
The critical path consists of the following:
	s_axi read operation ('input', ../../../Code/demo/substitute.c:3) on port 'input_r' (../../../Code/demo/substitute.c:3) [13]  (1 ns)
	'add' operation ('add_ln15', ../../../Code/demo/substitute.c:15) [14]  (0.871 ns)
	'icmp' operation ('icmp_ln15', ../../../Code/demo/substitute.c:15) [15]  (0.709 ns)
	blocking operation 1 ns on control path)

 <State 2>: 4.18ns
The critical path consists of the following:
	'load' operation ('substitute_key_load', ../../../Code/demo/substitute.c:17) on array 'substitute_key' [24]  (0.73 ns)
	'sub' operation ('diff', ../../../Code/demo/substitute.c:17) [25]  (0.871 ns)
	'icmp' operation ('icmp_ln21', ../../../Code/demo/substitute.c:21) [26]  (0.709 ns)
	'select' operation ('select_ln21', ../../../Code/demo/substitute.c:21) [27]  (0 ns)
	'add' operation ('add_ln21', ../../../Code/demo/substitute.c:21) [28]  (0.871 ns)
	s_axi write operation ('write_ln21', ../../../Code/demo/substitute.c:21) on port 'output_r' (../../../Code/demo/substitute.c:21) [29]  (1 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
