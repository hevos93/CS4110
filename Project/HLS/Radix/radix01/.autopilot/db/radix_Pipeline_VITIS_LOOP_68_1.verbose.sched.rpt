

================================================================
== Vitis HLS Report for 'radix_Pipeline_VITIS_LOOP_68_1'
================================================================
* Date:           Fri Dec  2 13:12:25 2022

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        Radix
* Solution:       radix01 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  1.454 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       10|       10|  0.100 us|  0.100 us|   10|   10|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_68_1  |        8|        8|         1|          1|          1|     8|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.45>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%counter = alloca i32 1"   --->   Operation 4 'alloca' 'counter' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%arr_counter = alloca i32 1"   --->   Operation 5 'alloca' 'arr_counter' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%str_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %str"   --->   Operation 6 'read' 'str_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%icmp_ln71_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %icmp_ln71"   --->   Operation 7 'read' 'icmp_ln71_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.46ns)   --->   "%store_ln0 = store i8 0, i8 %arr_counter"   --->   Operation 8 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 9 [1/1] (0.46ns)   --->   "%store_ln0 = store i4 0, i4 %counter"   --->   Operation 9 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%br_ln0 = br void %while.cond"   --->   Operation 10 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%counter_1 = load i4 %counter" [../../Code/radix/radix.c:72]   --->   Operation 11 'load' 'counter_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 12 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.72ns)   --->   "%icmp_ln68 = icmp_eq  i4 %counter_1, i4 8" [../../Code/radix/radix.c:68]   --->   Operation 13 'icmp' 'icmp_ln68' <Predicate = true> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 8, i64 8, i64 8"   --->   Operation 14 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.80ns)   --->   "%add_ln72 = add i4 %counter_1, i4 1" [../../Code/radix/radix.c:72]   --->   Operation 15 'add' 'add_ln72' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln68 = br i1 %icmp_ln68, void %while.body, void %while.end.exitStub" [../../Code/radix/radix.c:68]   --->   Operation 16 'br' 'br_ln68' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specloopname_ln69 = specloopname void @_ssdm_op_SpecLoopName, void @empty_14" [../../Code/radix/radix.c:69]   --->   Operation 17 'specloopname' 'specloopname_ln69' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%br_ln71 = br i1 %icmp_ln71_read, void %if.else, void %if.end" [../../Code/radix/radix.c:71]   --->   Operation 18 'br' 'br_ln71' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%arr_counter_load = load i8 %arr_counter" [../../Code/radix/radix.c:77]   --->   Operation 19 'load' 'arr_counter_load' <Predicate = (!icmp_ln68 & !icmp_ln71_read)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln75 = zext i8 %arr_counter_load" [../../Code/radix/radix.c:75]   --->   Operation 20 'zext' 'zext_ln75' <Predicate = (!icmp_ln68 & !icmp_ln71_read)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%vla13_addr = getelementptr i8 %vla13, i64 0, i64 %zext_ln75" [../../Code/radix/radix.c:75]   --->   Operation 21 'getelementptr' 'vla13_addr' <Predicate = (!icmp_ln68 & !icmp_ln71_read)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.73ns)   --->   "%store_ln75 = store i8 %str_read, i3 %vla13_addr" [../../Code/radix/radix.c:75]   --->   Operation 22 'store' 'store_ln75' <Predicate = (!icmp_ln68 & !icmp_ln71_read)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_1 : Operation 23 [1/1] (0.87ns)   --->   "%arr_counter_1 = add i8 %arr_counter_load, i8 1" [../../Code/radix/radix.c:77]   --->   Operation 23 'add' 'arr_counter_1' <Predicate = (!icmp_ln68 & !icmp_ln71_read)> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.46ns)   --->   "%store_ln77 = store i8 %arr_counter_1, i8 %arr_counter" [../../Code/radix/radix.c:77]   --->   Operation 24 'store' 'store_ln77' <Predicate = (!icmp_ln68 & !icmp_ln71_read)> <Delay = 0.46>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end"   --->   Operation 25 'br' 'br_ln0' <Predicate = (!icmp_ln68 & !icmp_ln71_read)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.46ns)   --->   "%store_ln68 = store i4 %add_ln72, i4 %counter" [../../Code/radix/radix.c:68]   --->   Operation 26 'store' 'store_ln68' <Predicate = (!icmp_ln68)> <Delay = 0.46>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln68 = br void %while.cond" [../../Code/radix/radix.c:68]   --->   Operation 27 'br' 'br_ln68' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 28 'ret' 'ret_ln0' <Predicate = (icmp_ln68)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.45ns
The critical path consists of the following:
	'alloca' operation ('arr_counter') [5]  (0 ns)
	'load' operation ('arr_counter_load', ../../Code/radix/radix.c:77) on local variable 'arr_counter' [22]  (0 ns)
	'add' operation ('arr_counter', ../../Code/radix/radix.c:77) [26]  (0.871 ns)
	'store' operation ('store_ln77', ../../Code/radix/radix.c:77) of variable 'arr_counter', ../../Code/radix/radix.c:77 on local variable 'arr_counter' [27]  (0.46 ns)
	blocking operation 0.123 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
